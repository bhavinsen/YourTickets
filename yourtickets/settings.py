"""
Django settings for yourtickets project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import os.path
from .config import config

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$pg$qkol&a=-w%!d(l#qfsr59zch=ab-13@+ynqt7x6w9wz@(3'

# SECURITY WARNING: don't run with debug turned on in production!
ENVIRONMENT = os.getenv('ENVIRONMENT', 'dev') 
DEBUG =  True
# DEBUG = DEBUG if ENVIRONMENT == 'production' else True

# if ENVIRONMENT == 'production' or ENVIRONMENT == 'staging':
#     import sentry_sdk
#     from sentry_sdk.integrations.django import DjangoIntegration

#     sentry_sdk.init(
#         dsn="https://b677c41e58b848c4b186ec3245e4145a@o1253613.ingest.sentry.io/6420684",
#         integrations=[DjangoIntegration()]
#     )
ALLOWED_CIDR_NETS = ['172.31.0.0/16']
ALLOWED_HOSTS = [
    'yourtickets.nl',
    'www.yourtickets.nl',
    'localhost',
    '127.0.0.1',

    
    # '34.252.137.93',
    # '34.251.173.197',
    # '54.194.227.119'  # test2
    #'63.34.12.60',
    #'*' # this should be removed once
]
if DEBUG:
    ALLOWED_HOSTS.append('*')

ADMINS = (
    ('Martijn van de Sande', 'almerelc@gmail.com'),
)

DEV_APPS = (
    'debug_toolbar',
)

DEV_MIDDLEWARE = (
    'debug_toolbar.middleware.DebugToolbarMiddleware',
)

INSTALLED_APPS = (
    'ebhealthcheck.apps.EBHealthCheckConfig',
    'corsheaders',
    'advanced_filters',
    'ticketshop.apps.TicketshopConfig',
    'rest_framework.authtoken',
    # 'dashboard.apps.DashboardConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework',
    'provider',
    'oauth2_provider',
    'imagekit',
    'django.contrib.humanize',
    'yourtickets',
    'youradmin',
    'dashboard',
    'yt_dashboard',
    'yt_dashboard.company_dashboard',
    'compressor',
    'django_celery_beat',
    'django.contrib.sitemaps',
    'storages'

) + (DEBUG and DEV_APPS or ())


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.IsAdminUser',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.TokenAuthentication',
    ]
}

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    'django.contrib.auth.backends.ModelBackend',
)

MIDDLEWARE = (
    'allow_cidr.middleware.AllowCIDRMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsPostCsrfMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    
) + (DEBUG and DEV_MIDDLEWARE or ())

ROOT_URLCONF = 'yourtickets.urls'



CORS_ALLOWED_ORIGINS = [
#     "*"
  "https://yourtickets.nl",
  "https://www.yourtickets.nl",
  "https://cdn.yourtickets.nl",
  "http://127.0.0.1"
# "https://sub.example.com",
# "http://localhost:8080",
# "http://127.0.0.1:9000"
 ]

if DEBUG:
    CORS_ORIGIN_ALLOW_ALL = True

# CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.request',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
                'yourtickets.common.context_processors.lc',
                'yourtickets.common.context_processors.langs',

            ],
        },
    },
]

WSGI_APPLICATION = 'yourtickets.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DB_ENGINE','django.db.backends.postgresql'),#config.get('db', 'engine'),
        'NAME': os.getenv('DB_NAME'), #config.get('db', 'name'),
        'USER': os.getenv('DB_USER'), # config.get('db', 'user'),
        'PASSWORD': os.getenv('DB_PASSWORD'), #config.get('db', 'password'),
        'HOST': os.getenv('DB_HOST'), #config.get('db', 'host'),
        'PORT': os.getenv('DB_PORT'), # 5432, #config.get('db', 'port'),
        'CHARSET': 'utf-8',
        'TEST': {
             'MIRROR': 'default',
        },
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'yourtickets_database',
#         'USER': 'postgres_yourticket',
#         'PASSWORD': '7MwK9Wh0s5tH6jqv',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


def show_toolbar(request):
    return False


DEBUG_TOOLBAR_CONFIG = dict(
    SHOW_TOOLBAR_CALLBACK='yourtickets.settings.show_toolbar',
    RESULTS_CACHE_SIZE=100
)

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

TIME_ZONE = 'Europe/Amsterdam'

USE_I18N = True

USE_L10N = False

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/




STATICFILES_DIRS = (os.path.join('static'), ("media", os.path.join(BASE_DIR, 'media'),))

DATETIME_FORMAT = 'j N Y, H:i'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/images/upload')
MEDIA_URL = '/media/images/upload/'
# MEDIA_ROOT_FIX = BASE_DIR  # config.get('yourtickets', 'media_root_fix', fallback=BASE_DIR)

FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755

# EMAIL_USE_TLS = False
# DEFAULT_FROM_EMAIL = 'noreply@yourtickets.nl'
# SERVER_EMAIL = 'noreply@yourtickets.nl'
# EMAIL_HOST = 'mailpit'
# EMAIL_PORT = 1025
# EMAIL_HOST_USER = 'noreply@yourtickets.nl'
# EMAIL_HOST_PASSWORD = ''
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'rsh.globaliasoft@gmail.com'
EMAIL_HOST_PASSWORD = 'nmegfexremugdgjk'
DEFAULT_FROM_EMAIL = 'rsh.globaliasoft@gmail.com'


MOLLIE_API_KEY = os.getenv('mollie_api_key') # config.get('yourtickets', 'mollie_api_key')
MOLLIE_TEST_API_KEY = config.get('yourtickets', 'mollie_test_key')
MOLLIE_REDIRECT_URL = config.get('yourtickets', 'mollie_redirect_url')

HOSTNAME = os.getenv('HOSTNAME') # config.get('yourtickets', 'hostname')

YOURADMIN_CASHFLOW_UPLOAD_DIR = BASE_DIR + '/youradmin/payment_import/'

CUSTOM_SHOP_UPLOAD_DIR = BASE_DIR
EMAIL_MEDIA_IMAGE_DIR = BASE_DIR + '/ticketshop/templates/emails/images/'
TICKET_CREATION_DIR = BASE_DIR + '/media/tickets/'
TEMP_TICKET_CREATION_DIR = BASE_DIR + '/temp_creation_dir/'
TICKET_ASSETS_DIR = BASE_DIR + '/ticket_assets/'  # needs write from www-data

LANGUAGE_CODE = 'nl-nl'
LANGUAGES = [
    ('nl', "NL"),
    ('en', "EN"),
    ('fr', "FR"),
]

ACTIVATION_SALT = 'DFGHHHfg456#%^&&#'

# allways enable compression
# COMPRESS_ENABLED = True
# reset ourput dir
COMPRESS_OUTPUT_DIR = ''
COMPRESS_OFFLINE = False
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    'compressor.finders.CompressorFinder',
)
COMPRESS_PRECOMPILERS = (
    ('text/x-scss', 'django_libsass.SassCompiler'),
)
LIBSASS_SOURCE_COMMENTS = False

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

DASHBOARD_URL = config.get('yourtickets', 'dashboard_url', fallback='')


STATIC_ROOT = '/ytstatic' if os.getenv('ENVIRONMENT') == 'production' or os.getenv('ENVIRONMENT') == 'staging' else 'devstatic'

STATIC_URL = os.getenv('STATIC_URL')

FORM_RENDERER = 'django.forms.renderers.DjangoTemplates'

# aws cdn config
# for media files upload

if ENVIRONMENT != 'dev':
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    # for collectstatic
    STATICFILES_STORAGE = 'yourtickets.common.storage.s3.CachedS3Boto3Storage'
    AWS_S3_ACCESS_KEY_ID = os.getenv('AWS_S3_ACCESS_KEY_ID')
    AWS_S3_SECRET_ACCESS_KEY = os.getenv('AWS_S3_SECRET_ACCESS_KEY')
    AWS_S3_CUSTOM_DOMAIN = os.getenv('AWS_S3_CUSTOM_DOMAIN')
    AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')

    COMPRESS_ROOT = STATIC_ROOT
    COMPRESS_STORAGE = STATICFILES_STORAGE
    COMPRESS_URL = STATIC_URL


    ### SES 
    EMAIL_BACKEND               = 'django_ses.SESBackend'
    AWS_SES_ACCESS_KEY_ID       = os.getenv('AWS_S3_ACCESS_KEY_ID')
    AWS_SES_SECRET_ACCESS_KEY   = os.getenv('AWS_S3_SECRET_ACCESS_KEY')
    AWS_SES_REGION_NAME         = os.getenv('AWS_SES_REGION_NAME')
    AWS_SES_REGION_ENDPOINT     = os.getenv('AWS_SES_REGION_ENDPOINT')
    USE_SES_V2 = True

# AWS_S3_SECURE_URLS = True
# AWS_S3_SESSION_PROFILE = ''

# STATICFILES_STORAGE = ''
# AWS_IS_GZIPPED = True
# STATIC_URL = ''
# 


# van docs
# AWS_CLOUDFRONT_KEY = os.environ.get('AWS_CLOUDFRONT_KEY', None).encode('ascii')
# AWS_CLOUDFRONT_KEY_ID = os.environ.get('AWS_CLOUDFRONT_KEY_ID', None)


